From: Robert Luberda <robert@debian.org>
Date: Sun, 15 Mar 2015 23:56:36 +0100
Subject: 0031 Initialize table

Initialize table with zero to prevent uninitialized memory
being written and make builds of hashes reproducible.

The change is strongly based on  original patches
by Reiner Herrmann <reiner@reiner-h.de>
and Valentin Lorentz <progval@progval.net>
in the bug reports given below.

Bug-Debian: https://bugs.debian.org/778862
Bug-Debian: https://bugs.debian.org/795606
---
 parse.y | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/parse.y b/parse.y
index 7396e86..cbea1e1 100644
--- a/parse.y
+++ b/parse.y
@@ -957,16 +957,16 @@ table		:	flagdef
 				tblsize = centnum + TBLINC;
 				tblnum = 0;
 				table = (struct flagent *)
-				  malloc (tblsize * (sizeof (struct flagent)));
+				  calloc (tblsize, (sizeof (struct flagent)));
 				if (table == NULL)
 				    {
 				    yyerror (PARSE_Y_NO_SPACE);
 				    exit (1);
 				    }
 				}
-			    else if (tblnum + centnum >= tblsize)
+			    else if (centnum >= tblsize)
 				{
-				tblsize = tblnum + centnum + TBLINC;
+				tblsize = centnum + TBLINC;
 				table = (struct flagent *)
 				  realloc ((char *) table,
 				    tblsize * (sizeof (struct flagent)));
@@ -975,6 +975,7 @@ table		:	flagdef
 				    yyerror (PARSE_Y_NO_SPACE);
 				    exit (1);
 				    }
+				memset((char*)table, 0, tblsize * sizeof(struct flagent));
 				}
 			    for (tblnum = 0;  tblnum < centnum;  tblnum++)
 				table[tblnum] = curents[tblnum];
@@ -995,6 +996,8 @@ table		:	flagdef
 				    yyerror (PARSE_Y_NO_SPACE);
 				    exit (1);
 				    }
+				memset((char*)table + tblnum * sizeof(struct flagent), 0,
+					(tblsize - tblnum) * sizeof(struct flagent));
 				}
 			    for (i = 0;  i < centnum;  i++)
 				table[tblnum + i] = curents[i];
@@ -1260,7 +1263,7 @@ conditions	:	char_set
 			    int			i;
 
 			    ent = (struct flagent *)
-			      malloc (sizeof (struct flagent));
+			      calloc (1, sizeof (struct flagent));
 			    if (ent == NULL)
 				{
 				yyerror (PARSE_Y_NO_SPACE);
